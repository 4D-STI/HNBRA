    # usar uma imagem base com node
    FROM node:20.17-alpine3.19 AS base

    # estagio de CONSTRUÇÃO
    FROM base AS build
    # adiciona lib para compatibilidade devido ao 'musl'
    RUN apk add --no-cache libc6-compat
    # definir uma pasta padrao
    WORKDIR /app
    # copiar arquivos necessarios
    COPY package*.json .
    # instalar dependências
    RUN npm ci
    # copiar codigo
    COPY . .
    # constroi o app de produção
    # RUN npm run build
    
    # estágio de DESENVOLVIMENTO
    FROM build AS development
    ENV NODE_ENV development
    WORKDIR /app
    EXPOSE 3000
    RUN npm run dev

    # # estágio de PRODUÇÃO
    # FROM base as production
    # WORKDIR /app
    # COPY --from=build /app/node_modules ./node_modules
    
    # ENV NODE_ENV production
    # ENV NEXT_SHARP_PATH "app/node_modules/sharp"
    # ENV NEXT_BUILD_CACHE false
    # ENV PORT 3001
    # ENV HOSTNAME "0.0.0.0"
    
    # # segurança: define grupo e usuario com permissões limitadas
    # RUN addgroup --system --gid 1001 nodejs
    # RUN adduser --system --uid 1001 nextjs
    
    # # permissões para usar corretamente o prerender do nextjs,
    # RUN rm -rf .next
    # RUN mkdir .next
    # RUN chown nextjs:nodejs .next
    
    # COPY --from=build /app/public ./public
    # COPY --from=build /app/next.config.mjs ./
    # COPY --from=build --chown=nextjs:nodejs /app/.next/standalone ./
    # COPY --from=build --chown=nextjs:nodejs /app/.next/static ./.next/static/

    # USER nextjs

    # EXPOSE 3001

    # # standalone output para não precisar usar todas as dependências
    # ENTRYPOINT ["node", "server.js"]

